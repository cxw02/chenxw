<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>博客美化</title>
    <link href="/2023/09/04/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    <url>/2023/09/04/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新时间：2023-09-05</p>          </div><h2 id="Fluid-页脚增加网站运行时长-1"><a href="#Fluid-页脚增加网站运行时长-1" class="headerlink" title="Fluid 页脚增加网站运行时长[1]"></a>Fluid 页脚增加网站运行时长<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Fluid 页脚增加网站运行时长 - Hexo Theme Fluid (fluid-dev.com)](https://hexo.fluid-dev.com/posts/fluid-footer-custom/)">[1]</span></a></sup></h2><p>Fluid 1.8.4 版本支持自定义页脚内容了，群友常改的网站运行时长，这次无需再修改源代码。<br>只需要在主题配置中的<code>footer: content</code>添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml">footer:<br>  content: &#x27;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://hexo.io&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Hexo<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-love&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Fluid<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 0.85rem&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/duration.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  &#x27;<br></code></pre></td></tr></table></figure><p><code>content</code>前三行是 Fluid 原有的页脚内容，建议不要删除，可稍作修改，保留 Fluid 的超链接，用于向更多人推广主题。<br><code>duration.js</code>包含的才是功能代码，我们在博客目录下创建 source&#x2F;js&#x2F;duration.js，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">/** 计时起始时间，自行修改 **/</span><br>  <span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;2020/01/01 00:00:00&quot;</span>);<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>    now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>);<br>    days = (now - start) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>;<br>    dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days);<br>    hours = (now - start) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum);<br>    hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;<br>      hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;<br>    &#125;<br>    minutes = (now - start) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum);<br>    mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;<br>      mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;<br>    &#125;<br>    seconds = (now - start) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum);<br>    snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;<br>      snum = <span class="hljs-string">&quot;0&quot;</span> + snum;<br>    &#125;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;本站安全运行&amp;nbsp&quot;</span>+dnum+<span class="hljs-string">&quot;&amp;nbsp天&quot;</span>;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class="hljs-string">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class="hljs-string">&quot;&amp;nbsp秒&quot;</span>;<br>  &#125;<br><br>  <span class="hljs-title function_">update</span>();<br>  <span class="hljs-built_in">setInterval</span>(update, <span class="hljs-number">1000</span>);<br>&#125;)();<br></code></pre></td></tr></table></figure><p>不要忘记把上面注释的时间改为自己的时间，至此这项功能就引入到<code>&lt;footer&gt;</code>里了。</p><h2 id="添加鼠标点击显示字体效果"><a href="#添加鼠标点击显示字体效果" class="headerlink" title="添加鼠标点击显示字体效果"></a>添加鼠标点击显示字体效果</h2><p>在 &#x2F;themes&#x2F;hexo-theme-spfk&#x2F;source&#x2F;js 下新建文件 click_show_text.js，在 click_show_text.js 文件中添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a_idx = <span class="hljs-number">0</span>;<br><span class="hljs-title function_">jQuery</span>(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">$</span>) &#123;<br>    $(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span><br>        (<span class="hljs-string">&quot;富强&quot;</span>, <span class="hljs-string">&quot;民主&quot;</span>, <span class="hljs-string">&quot;文明&quot;</span>, <span class="hljs-string">&quot;和谐&quot;</span>, <span class="hljs-string">&quot;自由&quot;</span>, <span class="hljs-string">&quot;平等&quot;</span>, <span class="hljs-string">&quot;公正&quot;</span>, <span class="hljs-string">&quot;法治&quot;</span>, <span class="hljs-string">&quot;爱国&quot;</span>, <span class="hljs-string">&quot;敬业&quot;</span>, <span class="hljs-string">&quot;诚信&quot;</span>, <span class="hljs-string">&quot;友善&quot;</span>);<br>        <span class="hljs-keyword">var</span> $i = $(<span class="hljs-string">&quot;&lt;span/&gt;&quot;</span>).<span class="hljs-title function_">text</span>(a[a_idx]);<br>        a_idx = (a_idx + <span class="hljs-number">1</span>) % a.<span class="hljs-property">length</span>;<br>        <span class="hljs-keyword">var</span> x = e.<span class="hljs-property">pageX</span>,<br>        y = e.<span class="hljs-property">pageY</span>;<br>        $i.<span class="hljs-title function_">css</span>(&#123;<br>            <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-number">5</span>,<br>            <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">20</span>,<br>            <span class="hljs-string">&quot;left&quot;</span>: x,<br>            <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>            <span class="hljs-string">&quot;font-weight&quot;</span>: <span class="hljs-string">&quot;bold&quot;</span>,<br>            <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;#FF0000&quot;</span><br>        &#125;);<br>        $(<span class="hljs-string">&quot;body&quot;</span>).<span class="hljs-title function_">append</span>($i);<br>        $i.<span class="hljs-title function_">animate</span>(&#123;<br>            <span class="hljs-string">&quot;top&quot;</span>: y - <span class="hljs-number">180</span>,<br>            <span class="hljs-string">&quot;opacity&quot;</span>: <span class="hljs-number">0</span><br>        &#125;,<br>            <span class="hljs-number">3000</span>,<br>            <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>                $i.<span class="hljs-title function_">remove</span>();<br>            &#125;);<br>    &#125;);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&#x27;delay()&#x27;</span>, <span class="hljs-number">2000</span>);<br>&#125;);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">delay</span>(<span class="hljs-params"></span>) &#123;<br>    $(<span class="hljs-string">&quot;.buryit&quot;</span>).<span class="hljs-title function_">removeAttr</span>(<span class="hljs-string">&quot;onclick&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>其中的社会主义核心价值观可以根据你自己的创意替换为其他文字，更改第16行代码可字体颜色随机<code>&quot;color&quot;: &quot;&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&quot;</code></p><p>然后在 \themes\hexo-theme-spfk\layout\layout.ejs 文件末尾添加以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--单击显示文字--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/click_show_text.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="背景添加动态线条效果"><a href="#背景添加动态线条效果" class="headerlink" title="背景添加动态线条效果"></a>背景添加动态线条效果</h2><p>在 &#x2F;themes&#x2F;hexo-theme-spfk&#x2F;source&#x2F;js 下新建文件 canvas-nest.js，在 canvas-nest.js 文件中添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">w,v,i</span>)&#123;<span class="hljs-keyword">return</span> w.<span class="hljs-title function_">getAttribute</span>(v)||i&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">j</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(i)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> i=<span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;script&quot;</span>),w=i.<span class="hljs-property">length</span>,v=i[w-<span class="hljs-number">1</span>];<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">l</span>:w,<span class="hljs-attr">z</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;zIndex&quot;</span>,-<span class="hljs-number">1</span>),<span class="hljs-attr">o</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;opacity&quot;</span>,<span class="hljs-number">0.5</span>),<span class="hljs-attr">c</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;color&quot;</span>,<span class="hljs-string">&quot;0,0,0&quot;</span>),<span class="hljs-attr">n</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;count&quot;</span>,<span class="hljs-number">99</span>)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params"></span>)&#123;r=u.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>,n=u.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,r,n);<span class="hljs-keyword">var</span> w=[f].<span class="hljs-title function_">concat</span>(t);<span class="hljs-keyword">var</span> x,v,A,B,z,y;t.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;i.<span class="hljs-property">x</span>+=i.<span class="hljs-property">xa</span>,i.<span class="hljs-property">y</span>+=i.<span class="hljs-property">ya</span>,i.<span class="hljs-property">xa</span>*=i.<span class="hljs-property">x</span>&gt;r||i.<span class="hljs-property">x</span>&lt;<span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>,i.<span class="hljs-property">ya</span>*=i.<span class="hljs-property">y</span>&gt;n||i.<span class="hljs-property">y</span>&lt;<span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>,e.<span class="hljs-title function_">fillRect</span>(i.<span class="hljs-property">x</span>-<span class="hljs-number">0.5</span>,i.<span class="hljs-property">y</span>-<span class="hljs-number">0.5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span>(v=<span class="hljs-number">0</span>;v&lt;w.<span class="hljs-property">length</span>;v++)&#123;x=w[v];<span class="hljs-keyword">if</span>(i!==x&amp;&amp;<span class="hljs-literal">null</span>!==x.<span class="hljs-property">x</span>&amp;&amp;<span class="hljs-literal">null</span>!==x.<span class="hljs-property">y</span>)&#123;B=i.<span class="hljs-property">x</span>-x.<span class="hljs-property">x</span>,z=i.<span class="hljs-property">y</span>-x.<span class="hljs-property">y</span>,y=B*B+z*z;y&lt;x.<span class="hljs-property">max</span>&amp;&amp;(x===f&amp;&amp;y&gt;=x.<span class="hljs-property">max</span>/<span class="hljs-number">2</span>&amp;&amp;(i.<span class="hljs-property">x</span>-=<span class="hljs-number">0.03</span>*B,i.<span class="hljs-property">y</span>-=<span class="hljs-number">0.03</span>*z),A=(x.<span class="hljs-property">max</span>-y)/x.<span class="hljs-property">max</span>,e.<span class="hljs-title function_">beginPath</span>(),e.<span class="hljs-property">lineWidth</span>=A/<span class="hljs-number">2</span>,e.<span class="hljs-property">strokeStyle</span>=<span class="hljs-string">&quot;rgba(&quot;</span>+s.<span class="hljs-property">c</span>+<span class="hljs-string">&quot;,&quot;</span>+(A+<span class="hljs-number">0.2</span>)+<span class="hljs-string">&quot;)&quot;</span>,e.<span class="hljs-title function_">moveTo</span>(i.<span class="hljs-property">x</span>,i.<span class="hljs-property">y</span>),e.<span class="hljs-title function_">lineTo</span>(x.<span class="hljs-property">x</span>,x.<span class="hljs-property">y</span>),e.<span class="hljs-title function_">stroke</span>())&#125;&#125;w.<span class="hljs-title function_">splice</span>(w.<span class="hljs-title function_">indexOf</span>(i),<span class="hljs-number">1</span>)&#125;),<span class="hljs-title function_">m</span>(b)&#125;<span class="hljs-keyword">var</span> u=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>),s=<span class="hljs-title function_">l</span>(),c=<span class="hljs-string">&quot;c_n&quot;</span>+s.<span class="hljs-property">l</span>,e=u.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),r,n,m=<span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">oRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span>||<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(i,<span class="hljs-number">1000</span>/<span class="hljs-number">45</span>)&#125;,a=<span class="hljs-title class_">Math</span>.<span class="hljs-property">random</span>,f=&#123;<span class="hljs-attr">x</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">y</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">max</span>:<span class="hljs-number">20000</span>&#125;;u.<span class="hljs-property">id</span>=c;u.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span>+s.<span class="hljs-property">z</span>+<span class="hljs-string">&quot;;opacity:&quot;</span>+s.<span class="hljs-property">o</span>;<span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(u);<span class="hljs-title function_">k</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span>=k;<span class="hljs-variable language_">window</span>.<span class="hljs-property">onmousemove</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;i=i||<span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>,f.<span class="hljs-property">x</span>=i.<span class="hljs-property">clientX</span>,f.<span class="hljs-property">y</span>=i.<span class="hljs-property">clientY</span>&#125;,<span class="hljs-variable language_">window</span>.<span class="hljs-property">onmouseout</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;f.<span class="hljs-property">x</span>=<span class="hljs-literal">null</span>,f.<span class="hljs-property">y</span>=<span class="hljs-literal">null</span>&#125;;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=[],p=<span class="hljs-number">0</span>;s.<span class="hljs-property">n</span>&gt;p;p++)&#123;<span class="hljs-keyword">var</span> h=<span class="hljs-title function_">a</span>()*r,g=<span class="hljs-title function_">a</span>()*n,q=<span class="hljs-number">2</span>*<span class="hljs-title function_">a</span>()-<span class="hljs-number">1</span>,d=<span class="hljs-number">2</span>*<span class="hljs-title function_">a</span>()-<span class="hljs-number">1</span>;t.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">x</span>:h,<span class="hljs-attr">y</span>:g,<span class="hljs-attr">xa</span>:q,<span class="hljs-attr">ya</span>:d,<span class="hljs-attr">max</span>:<span class="hljs-number">6000</span>&#125;)&#125;<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">b</span>()&#125;,<span class="hljs-number">100</span>)&#125;();<br></code></pre></td></tr></table></figure><p>然后在 \Hexo\themes\hexo-theme-spfk\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--动态线条背景--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">color</span>=<span class="hljs-string">&quot;220,220,220&quot;</span> <span class="hljs-attr">opacity</span>=<span class="hljs-string">&#x27;0.7&#x27;</span> <span class="hljs-attr">zIndex</span>=<span class="hljs-string">&quot;-2&quot;</span> <span class="hljs-attr">count</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/canvas-nest.js&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中：</p><ul><li><p>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</p></li><li><p>opacity：表示线条透明度（0~1）越小越透明，默认：0.5</p></li><li><p>count：表示线条的总数量，默认：150</p></li><li><p>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</p></li></ul><h2 id="浏览器网页标题恶搞"><a href="#浏览器网页标题恶搞" class="headerlink" title="浏览器网页标题恶搞"></a>浏览器网页标题恶搞</h2><p>当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录 \Hexo\themes\hexo-theme-spfk\source\js 下新建一个 FunnyTitle.js 文件，在里面填写如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!--浏览器搞笑标题--&gt;<br> <span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitle</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br> <span class="hljs-keyword">var</span> titleTime;<br> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>     <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>         $(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/img/trhx2.png&quot;</span>);<br>         <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;ヽ(●-`Д´-)ノ你丑你就走！&#x27;</span>;<br>         <span class="hljs-built_in">clearTimeout</span>(titleTime);<br>     &#125;<br>     <span class="hljs-keyword">else</span> &#123;<br>         $(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/img/trhx2.png&quot;</span>);<br>         <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;ヾ(Ő∀Ő3)ノ你帅就回来！&#x27;</span> + <span class="hljs-title class_">OriginTitle</span>;<br>         titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>             <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitle</span>;<br>         &#125;, <span class="hljs-number">2000</span>);<br>     &#125;<br> &#125;);<br></code></pre></td></tr></table></figure><p>然后在 \Hexo\themes\hexo-theme-spfk\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--浏览器搞笑标题--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;\js\FunnyTitle.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://hexo.fluid-dev.com/posts/fluid-footer-custom/">Fluid 页脚增加网站运行时长 - Hexo Theme Fluid (fluid-dev.com)</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://zhuanlan.zhihu.com/p/69211731">Hexo 博客美化合集（不断更新） - 知乎 (zhihu.com)</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>功能增强</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>javascript</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github 搭建自己的专属博客</title>
    <link href="/2023/09/01/Hexo-Github-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/09/01/Hexo-Github-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新时间：2023-09-04</p>          </div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="GitHub-Pages-是什么？"><a href="#GitHub-Pages-是什么？" class="headerlink" title="GitHub Pages 是什么？"></a>GitHub Pages 是什么？</h3><ul><li><a href="https://link.zhihu.com/?target=https://help.github.com/en/articles/what-is-github-pages">What is GitHub Pages? - GitHub Help</a><br>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</li></ul><h3 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="Hexo 是什么？"></a>Hexo 是什么？</h3><ul><li>官网：<a href="https://hexo.io/zh-cn/">hexo.io</a><br>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</li></ul><h3 id="Hexo-GitHub-文章发布原理"><a href="#Hexo-GitHub-文章发布原理" class="headerlink" title="Hexo + GitHub 文章发布原理"></a>Hexo + GitHub 文章发布原理</h3><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p><h3 id="优点和不足"><a href="#优点和不足" class="headerlink" title="优点和不足"></a>优点和不足</h3><p><strong>优点</strong>：完全免费；静态站点，轻量快速；可按需求自由定制改造；托管在 GitHub，安全省心；迁移方便……<br><strong>不足</strong>：发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点不快。</p><h2 id="1-安装Git和NodeJS"><a href="#1-安装Git和NodeJS" class="headerlink" title="1. 安装Git和NodeJS"></a>1. 安装Git和NodeJS</h2><ul><li><p>在Windows上使用Git，可以从<a href="https://git-scm.com/downloads">Git官网</a>直接下载，然后按默认选项安装即可。安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p></li><li><p>由于Hexo是基于Node.js驱动的一款博客框架，所以安装<a href="https://nodejs.org/en/download">NodeJS</a>并配置环境变量。</p></li><li><p>安装之后可以输入以下命令查看是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git version<br>node -v<br>npm -v<br></code></pre></td></tr></table></figure></li></ul><p><img src="/img/3/1-1.png" alt="图1-1"></p><h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h2><ul><li>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。在命令行输入执行如下命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br>hexo init blog<br><span class="hljs-built_in">cd</span> blog<br>npm install<br>hexo server<br></code></pre></td></tr></table></figure><p>输完上面的命令后，会提示<code>INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</code>按住Ctrl点击<a href="http://localhost:4000/">http://localhost:4000/</a>就能够预览效果了。</p><h2 id="3-加载主题"><a href="#3-加载主题" class="headerlink" title="3. 加载主题"></a>3. 加载主题</h2><ul><li>大家可以去官网上找自己喜欢的主题下载<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> ，自己采用的主题是<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a>，这款有明暗两种颜色。</li></ul><h2 id="未完成……"><a href="#未完成……" class="headerlink" title="未完成……"></a>未完成……</h2><h2 id="感谢-DID迪-教程"><a href="#感谢-DID迪-教程" class="headerlink" title="感谢 DID迪 教程"></a>感谢 DID迪 教程</h2><p><a href="https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&vd_source=6476d44df32266e214f26b9d75ce856b">[教程]Hexo &amp; Github搭建自己的专属博客</a></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>hexo</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>相关命令</title>
    <link href="/2023/08/31/%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/08/31/%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><h2 id="hexo静态博客框架中各个目录的作用"><a href="#hexo静态博客框架中各个目录的作用" class="headerlink" title="hexo静态博客框架中各个目录的作用"></a>hexo静态博客框架中各个目录的作用</h2><ul><li><p>.deploy_git: 这个应该是git部署用的文件。比如你写好的博客想部署到 GitHub Pages上去的话，可以用git部署插件，那个插件会创建这个目录</p></li><li><p>node_modules: 这个应该是node.js用到的安装到当前“项目／目录”的插件／模块目录吧。毕竟hexo是通过npm安装的吧？</p></li><li><p>public: 这应该是hero编译之后的网站的目录</p></li><li><p>.gitignore: 这是一个git的配置文件，里面定义了不列入git管理的内容设置</p></li><li><p>db.json: 这个我也不知道。</p></li></ul><h2 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h2><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><p>您可以在命令中指定文章的布局（layout），默认为 post。</p><h2 id="更新博客"><a href="#更新博客" class="headerlink" title="更新博客"></a>更新博客</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><h2 id="使用git上传文件到github"><a href="#使用git上传文件到github" class="headerlink" title="使用git上传文件到github"></a>使用git上传文件到github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git status  （查看现在的状态，也可以不看，随你啦）<br>git commit -m <span class="hljs-string">&quot;这里是注释&quot;</span><br>git push origin main<br></code></pre></td></tr></table></figure><h2 id="1-恢复某个版本（先用git-status查看是否改动）"><a href="#1-恢复某个版本（先用git-status查看是否改动）" class="headerlink" title="1. 恢复某个版本（先用git status查看是否改动）"></a>1. 恢复某个版本（先用git status查看是否改动）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span><br>git reset --hard 76eac54<br></code></pre></td></tr></table></figure><h2 id="2-删除所有Commit提交记录"><a href="#2-删除所有Commit提交记录" class="headerlink" title="2. 删除所有Commit提交记录"></a>2. 删除所有Commit提交记录</h2><ul><li><p>（1）创建孤立分支，并切换到该分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout --orphan latest_branch<br></code></pre></td></tr></table></figure></li><li><p>（2）暂存所有文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add -A<br></code></pre></td></tr></table></figure></li><li><p>（3）提交所有更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -am <span class="hljs-string">&quot;First Commit&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>（4）删除主分支 master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -D master<br></code></pre></td></tr></table></figure></li><li><p>（5）重命名当前分支为 master：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -m master<br></code></pre></td></tr></table></figure></li><li><p>（6）强制推送本地分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push -f origin master<br></code></pre></td></tr></table></figure></li></ul><h2 id="删除旧的reflog条目"><a href="#删除旧的reflog条目" class="headerlink" title="删除旧的reflog条目"></a>删除旧的reflog条目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reflog expire --expire=90.days.ago --expire-unreachable=now --all<br></code></pre></td></tr></table></figure><h2 id="相关连接"><a href="#相关连接" class="headerlink" title="相关连接"></a>相关连接</h2><ul><li><p>上传至github <a href="https://zhuanlan.zhihu.com/p/136355306">https://zhuanlan.zhihu.com/p/136355306</a></p></li><li><p>出现错误 <a href="https://blog.csdn.net/junruitian/article/details/88361895">https://blog.csdn.net/junruitian/article/details/88361895</a></p></li><li><p>Git：恢复某个版本 <a href="https://zhuanlan.zhihu.com/p/138501112">https://zhuanlan.zhihu.com/p/138501112</a></p></li><li><p>Git：删除所有Commit提交记录 <a href="https://zhuanlan.zhihu.com/p/347385535">https://zhuanlan.zhihu.com/p/347385535</a></p></li><li><p>Git：删除旧的reflog条目 <a href="https://www.coder.work/article/1530687">https://www.coder.work/article/1530687</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>hexo</tag>
      
      <tag>Github</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/08/31/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/08/31/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h1><h2 id="1-标题一"><a href="#1-标题一" class="headerlink" title="1.标题一"></a>1.标题一</h2><p>文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试</p><h2 id="2-标题二"><a href="#2-标题二" class="headerlink" title="2.标题二"></a>2.标题二</h2><p>文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试文字段落测试</p><h2 id="3-标题三"><a href="#3-标题三" class="headerlink" title="3.标题三"></a>3.标题三</h2>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/28/hello-world/"/>
    <url>/2023/08/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
